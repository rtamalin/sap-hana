# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                         OS Base Disk Configuration                         |
# |                                                                            |
# +------------------------------------4--------------------------------------*/
---
# -------------------------------------+---------------------------------------8
#
# Task: 1.14     - resize-disk-partitions
#
# -------------------------------------+---------------------------------------8

# -------------------------------------+---------------------------------------8
#
# The default market place images are usually based on a 30G or 64G image which
# may auto-expand to fill all available space, unless the cloud-init growpart,
# or similar mechanisms are disabled.
#
# As of June 2021 the supported images have the following initial layouts:
#
# * RHEL
#   The image is LVM based with a VG called 'rootvg' that contains separate
#   LVs for /, /usr, /var, /tmp and /home. This partition holding the VG is
#   the last on the disk and thus eligible for expansion to fille the disk.
#   E.g.
#     NAME              MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
#     sda                 8:0    0  128G  0 disk 
#     ├─sda1              8:1    0  500M  0 part /boot
#     ├─sda2              8:2    0   63G  0 part 
#     │ ├─rootvg-tmplv  253:0    0    2G  0 lvm  /tmp
#     │ ├─rootvg-usrlv  253:1    0   10G  0 lvm  /usr
#     │ ├─rootvg-homelv 253:2    0    1G  0 lvm  /home
#     │ ├─rootvg-varlv  253:3    0    8G  0 lvm  /var
#     │ └─rootvg-rootlv 253:4    0    2G  0 lvm  /
#     ├─sda14             8:14   0    4M  0 part 
#     └─sda15             8:15   0  495M  0 part /boot/efi
#
# * SLES
#   The last disk partition is an XFS based / file system, which auto-expands
#   to fill the disk unless the cloud-init growpart mechanism is disabled.
#   E.g.
#     NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
#     sda      8:0    0  128G  0 disk 
#     ├─sda1   8:1    0    2M  0 part 
#     ├─sda2   8:2    0  512M  0 part /boot/efi
#     ├─sda3   8:3    0    1G  0 part /boot
#     └─sda4   8:4    0 28.5G  0 part /
#
# NOTES:
# * The disk holding the root file system is usually, but not always, /dev/sda.
#   Therefore it is necessary to dynamically determine the disk hosting it.
#   This can be determined using the standard ansible facts gathered by the
#   gather_facts/setup mechanism.
# -------------------------------------+---------------------------------------8

# ----------------------------------------
# BEGIN
# ----------------------------------------

- name: Determine device hosting root file system
  set_fact:
    root_device: >-
      {{ ansible_mounts | selectattr('mount', 'equalto', '/') | map(attribute='device') | first }}
  
- debug:
    var: root_device
    verbosity: 1

- name: Determine disk hosting root file system (LVM based)
  block:
    - set_fact:
        root_disk: >-
          {{ root_device | regex_replace('[0-9]*$', '') }}
        root_vg: "rootvg"

    - debug:
        var: root_disk
        verbosity: 1

  when:
    - not root_device.startswith('/dev/mapper/')

- name: Determine disk hosting root file system (Partition based)
  block:
    - set_fact:
        root_vg: >-
          {{ root_device | regex_replace('^/dev/mapper/', '') | regex_replace('-*$', '') }}

  when:
    - root_device.startswith('/dev/mapper/')

- debug:
    var: root_vg
    verbosity: 1

- name: Query partition table details for {{ root_disk }}
  parted:
    device: "{{ root_disk }}"
  register: root_disk_table

- debug:
    var: root_disk_table
    verbosity: 1



# ----------------------------------------
# END
# ----------------------------------------